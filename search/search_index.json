{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Me","text":""},{"location":"#bringing-ai-and-software-together","title":"Bringing AI and Software together","text":""},{"location":"#cut-through-the-buzzwords","title":"Cut through the buzzwords","text":"<p>Every day we see more and more of the same hype and churn in the tech world. There is a lot going on and it can be even more to handle. I remove complicated jargon and bring companies solutions that work for them and their comfortability between the black box of AI and the thousands of lines  of custom coded solutions.</p> <p> Let's talk about how I can help you </p>"},{"location":"#about-me","title":"About me","text":"<p>My name is Alan Wade and I am a freelance software engineer, dedicated to providing tailored solutions that align with my clients' long-term needs. My goal is to build scalable, sustainable systems that deliver lasting value.</p> <p>With seven years of experience in transportation and logistics, I have learned the critical importance of designing systems that can scale efficiently. Effective system development requires deep knowledge of diverse tools, each chosen to fit the specific job at hand. My expertise spans various domains, from setting up Kubernetes servers to analyzing large datasets using cloud solutions like Google BigQuery. I have also worked extensively with Apache Kafka connectors to integrate new data streams seamlessly.</p> <p>I believe technology is a powerful enabler, helping people optimize their efficiency and focus on what truly matters. By building intelligent, data-driven solutions, I aim to reduce noise and provide actionable insights that empower individuals and businesses to make informed decisions and drive meaningful progress.</p>"},{"location":"#my-value","title":"My value","text":"<ul> <li> <p> Business Experience</p> <p>From working in a Fortune 500 company for over seven years, I know what can be important to users. I promise to work with you on making reasonable delivery expectations so that your company can continue to grow.</p> </li> <li> <p> On-time Delivery</p> <p>I believe in getting stuff done. One thing you can expect from me is that I am going to get your project done on time and on budget. The reason why you want someone with my expertise is because you need someone who you can count on to get the job done and I will not let you down.</p> </li> <li> <p> Understanding</p> <p>I work with people to find what solution is going to be best for them long term even. My goal is for people to have something that they are happy with even if it isn't what they initially asked for.</p> </li> <li> <p> Training</p> <p>In my corporate experience, I was a lead developer and mentor to those around me. I worked with them to understand the latest and greatest technologies that we had and what impact adoption of those technologies would bring to our deliverables. </p> </li> </ul>"},{"location":"blog/2025/03/28/picking-the-right-tools/","title":"Picking the Right Tools","text":"<p>When starting a new project, it's important to choose the right tools. However, many people get so caught up in finding the perfect tool that they lose sight of what matters most: getting started.</p> <p>The most important part of any new project is taking that first step. You could have access to the most sophisticated tools in the world, each perfectly optimized for specific scenarios. But none of that matters if you spend all your time searching through the toolbox instead of building. I've found that using simple, open-source tools for prototyping helps me learn faster and deliver more quickly than trying to find the perfect solution.</p>"},{"location":"blog/2025/03/28/picking-the-right-tools/#my-prototyping-journey","title":"My Prototyping Journey","text":""},{"location":"blog/2025/03/28/picking-the-right-tools/#tooling-overload","title":"Tooling Overload","text":"<p>When I began exploring how to build a chatbot, I found myself overwhelmed by countless online resources. Zapier, n8n, Python tutorials, MCP \u2013 the options seemed endless. I was simply trying to validate my proof of concept and solidify my understanding of the project before diving in. That's when I discovered FlowiseAI. While this isn't meant to be an advertisement for open-source software, this tool proved incredibly valuable. I could use their templates as a starting point, experiment with different configurations, and understand how the connections would work with my actual tech stack.</p>"},{"location":"blog/2025/03/28/picking-the-right-tools/#playing-with-flowise","title":"Playing with Flowise","text":"<p>The tool made it easy to access their marketplace, add a web scraper for their GitHub page, and start conversations with the built-in chatbot. Below you can see the configuration needed to initialize the bot.</p> <p>Now, I can hear you thinking, \"Alan, after all that talk about not getting caught up in tool selection, it seems like you've done exactly that with FlowiseAI. Isn't that a bit hypocritical?\"</p> <p>It might appear that way, but this wasn't where my project ended. I used what I learned about integrations and web scraping from the tool to create my own Python implementation. The key insight was that while the no-code/low-code solution provided a helpful starting point, I could have achieved similar results with any of the platforms. Instead of getting stuck searching for the perfect starting point, I simply used the last tool I found, even though it wasn't ideal.</p>"},{"location":"blog/2025/03/28/picking-the-right-tools/#conclusion","title":"Conclusion","text":"<p>When starting a project, stop obsessing over the latest tools or worrying about what some PhD on LinkedIn says about your current stack being outdated. Take action and build something. The sooner you create a baseline, the sooner you can iterate and see how your idea performs with real data and traffic.</p> <p>To see how my chatbot experiments turned out, check out my portfolio case study or my rag-experiments GitHub repository.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>What's your pricing structure?</p> <p>My hourly rates are currently varied depending on the type of work being performed. I am also open to fixed-rate work with deliverables throughout the process. Schedule a call with me so we can discuss your needs!</p> <p>How will I how the project is going?</p> <p>I will work with you on a form of communication the fits your needs best. I have my own default check-in process for clients to make sure that they know how well everything is going or if there are any blockers to the delivery that need to be discussed.</p> <p>Do you only know transportation?</p> <p>While the business that I am most familiar with is transportation, I have developed key skills to work with people from all walks of life. I am eager to learn about other sectors and help more people in other industries.</p>"},{"location":"portfolio/","title":"Portfolio","text":""},{"location":"portfolio/#case-studies","title":"Case Studies","text":""},{"location":"portfolio/#rag-chatbot-with-single-webpage","title":"RAG Chatbot with Single Webpage","text":"Research <p>Category: AI Experimentation</p> <p>Technologies Used: OpenAI, Pinecone, LangChain</p>"},{"location":"portfolio/#concept","title":"Concept","text":"<p>I wanted to be able to provide an AI Knowledge Base for a Chatbot that could be easily implemented and prototyped. This was so that I could make a baseline implementation to enhance with client needs and apply to their specific use-case.</p>"},{"location":"portfolio/#process","title":"Process","text":"<pre><code>graph LR\n    subgraph Data Sources\n        D1[Raw Website Data] --&gt;|Process| D2[Filtered &amp; Chunked Data]\n        D2 --&gt;|Embed| D3[Vector Embeddings]\n    end\n\n    subgraph Storage\n        D3 --&gt;|Store| VDB[(Pinecone Vector DB)]\n    end\n\n    subgraph Query Flow\n        Q1[User Question] --&gt;|Query| VDB\n        VDB --&gt;|Context| Q2[Enhanced Question]\n        Q2 --&gt;|Process| Q3[GPT-4 Response]\n    end\n\n    style D1 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style D2 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style D3 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style VDB fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style Q1 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style Q2 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px\n    style Q3 fill:#f9f9f9,stroke:#489FB5,stroke-width:2px</code></pre> <p>I took the idea that I had and templated the workflow using FlowiseAI. The no-code UI allowed me to experiment with how I wanted to source the information and make connections with the embeddings from OpenAI to the Pinecone vector DB. Using the VectorDB, I enhanced questions that were asked of the chatbot using the <code>gpt-4o-mini</code> model to give contextual information.</p>"},{"location":"portfolio/#outcomes","title":"Outcomes","text":"<ul> <li>I made a github repository with my base implementation that I can now showcase to people what high level prototyping can lead to</li> <li>I learned about the efficacy that sanitizing the data and chunking it appropriately can have on the cost and token utilization when leveraging LLM Models</li> </ul>"},{"location":"portfolio/#product-development","title":"Product Development","text":""},{"location":"portfolio/#notification-system-optimizations","title":"Notification System Optimizations","text":"Details <p>Category: Software Engineering</p> <p>Technologies Used: Spring Boot, Java, Apache Kafka, Microsoft SQL Server, Kubernetes</p>"},{"location":"portfolio/#problem-statement","title":"Problem Statement","text":"<p>The existing notification system was complex, obfuscated, and inconsistent. We needed a framework to standardize the creation of new notification types and their default behaviors within our system.</p>"},{"location":"portfolio/#previous-architecture","title":"Previous Architecture","text":"<pre><code>sequenceDiagram\n    participant Timer\n    participant Scheduler\n    participant DB\n    participant UserService\n    participant NotificationService\n\n    Note over Timer: Every 5 minutes\n    Timer-&gt;&gt;Scheduler: Trigger notification check\n    Scheduler-&gt;&gt;DB: Query events from last 5 minutes\n    DB--&gt;&gt;Scheduler: Return recent events\n\n    Scheduler-&gt;&gt;UserService: Get all users\n    UserService--&gt;&gt;Scheduler: Return user list\n\n    loop For each event\n        Scheduler-&gt;&gt;UserService: Filter users by profile\n        UserService--&gt;&gt;Scheduler: Return matching users\n\n        loop For each matching user\n            Scheduler-&gt;&gt;NotificationService: Send notification\n            NotificationService--&gt;&gt;Scheduler: Notification sent\n        end\n    end</code></pre>"},{"location":"portfolio/#issues","title":"Issues","text":"<p>The main issue with this implementation was not that it was inherently complex, but that we had so many notifications and this single service was bloated with a lot of timers that couldn't work for the company standards long term. The amount of code became un-maintainable and features were easily lost on what was being used and what wasn't being used. Finally, if there was any change to one notification setup, it would affect all other notifications within the product.</p>"},{"location":"portfolio/#implementation","title":"Implementation","text":"<p>I had created a new Spring Boot application that leveraged events streamed through Apache Kafka to then get user notification profiles and send a notification to them based on their existing preferences. </p>"},{"location":"portfolio/#new-architecture","title":"New Architecture","text":"<pre><code>sequenceDiagram\n    participant EventSource\n    participant Kafka\n    participant NotificationProcessor\n    participant UserService\n    participant NotificationService\n\n    EventSource-&gt;&gt;Kafka: Publish event with user data\n    Kafka-&gt;&gt;NotificationProcessor: Stream event\n    NotificationProcessor-&gt;&gt;UserService: Get user notification profile\n    UserService--&gt;&gt;NotificationProcessor: Return profile preferences\n    NotificationProcessor-&gt;&gt;NotificationService: Send notification based on profile\n    NotificationService--&gt;&gt;NotificationProcessor: Notification sent\n\n    Note over EventSource,Kafka: Event-driven architecture\n    Note over NotificationProcessor: Single responsibility per processor</code></pre>"},{"location":"portfolio/#value-provided","title":"Value Provided","text":"<p>The new architecture enabled easy expansion of notification types and eliminated duplicates through Apache Camel routing and the Idempotent Consumer pattern. This provided developers with clear documentation of upstream event sources and their relationships with our notification system.</p> <ul> <li>I was able to reduce the existing complexities within the notification system by making a template for new notifications to be built upon.</li> <li>I reduced the number of unused notifications in the system from a legacy application.</li> <li>Removed the reliance on a legacy application which wasn't on the current deployment standards.</li> </ul>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/tooling/","title":"Tooling","text":""},{"location":"blog/category/ai/","title":"AI","text":""}]}